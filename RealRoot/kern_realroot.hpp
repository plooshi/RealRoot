#ifndef kern_realroot_hpp
#define kern_realroot_hpp

void InitRealRoot();

const uint8_t pivotRootOrig[] = {
    0xbe, 0x33, 0x68, 0x04, 0x80, // mov esi, 0x80046833
    0x4c, 0x89, 0xe7, // mov rdi, r12
    0x31, 0xd2, // xor edx, edx
    0x31, 0xc9, // xor ecx, ecx
    0xe8, 0x00, 0x00, 0x00, 0x00 // call _VNOP_IOCTL
};

const uint8_t pivotRootMask[] = {
    0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff,
    0xff, 0xff,
    0xff, 0xff,
    0xff, 0x00, 0x00, 0x00, 0x00
};

const uint8_t pivotRootReplace[] = {
    0xbe, 0x33, 0x68, 0x04, 0x80, // mov esi, 0x80046833
    0x4c, 0x89, 0xe7, // mov rdi, r12
    0x31, 0xd2, // xor edx, edx
    0x31, 0xc9, // xor ecx, ecx
    0x31, 0xc0, // xor eax, eax
    0x90, // nop
    0x90, // nop
    0x90 // nop
};

const uint8_t pivotRootReplaceMask[] = {
    0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff,
    0xff, 0xff,
    0xff, 0xff,
    0xff, 0xff,
    0xff,
    0xff,
    0xff
};

const uint8_t apfsVfsopMountOrig[] = {
    0xe8, 0x00, 0x00, 0x00, 0x00, // call
    0xe9, 0x00, 0x00, 0x00, 0x00, // jmp
    0x48, 0x8b, 0x80, 0x00, 0x00, 0x00, 0x00, // mov rax, qword ptr [rXX+_V1]
    0xf6, 0x40, 0x38, 0x20, // test byte [rax+_V2], 0x20
    0x0f, 0x84, // j(n)e
};

const uint8_t apfsVfsopMountMask[] = {
    0xff, 0x00, 0x00, 0x00, 0x00,
    0xff, 0x00, 0x00, 0x00, 0x00,
    0xfd, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xfe
};

const uint8_t apfsVfsopMountOrigBSM[] = {
    0x48, 0x8b, 0x85, 0x00, 0x00, 0x00, 0x80, // mov rax, qword ptr [rbp-_V1]
    0x48, 0x8b, 0x80, 0x00, 0x00, 0x00, 0x00, // mov rax, qword ptr [rXX+_V2]
    0xf6, 0x40, 0x38, 0x20, // test byte [rax+_V3], 0x20
    0x0f, 0x84, 0x00, 0x00, 0x00, 0x00, // j(n)e
    0x45, 0x31, 0xf6, // xor r14d, r14d
};

const uint8_t apfsVfsopMountMaskBSM[] = {
    0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x80,
    0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xfe, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xff, 0xff
};

const uint8_t oldRWPatchOrig[] = {
    0xe8, 0x00, 0x00, 0x00, 0x00, // call _vfs_flags
    0x0f, 0xba, 0xe0, 0x0e, // bt eax, 0xe
    0x0f, 0x83, 0x00, 0x00, 0x00, 0x00 // jae
};

const uint8_t oldRWPatchMask[] = {
    0xff, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x00, 0x00, 0x00, 0x00
};

const uint8_t oldRWPatchReplace[] = {
    0xe8, 0x00, 0x00, 0x00, 0x00, // call _vfs_flags
    0x0f, 0xba, 0xe0, 0x0e, // bt eax, 0xe
    0x90, 0xe9, 0x00, 0x00, 0x00, 0x00 // jmp
};

const uint8_t oldRWPatchReplaceMask[] = {
    0xff, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x00, 0x00, 0x00, 0x00
};

const uint8_t SnapshotOrig[] = {
    0xbf, 0x10, 0x00, 0x00, 0x00, // mov edi, 0x10
    0xe8, 0x00, 0x00, 0x00, 0x00, // call _csr_check
    0x89, 0xc3, // mov ebx, eax
    0xbf, 0x00, 0x08, 0x00, 0x00, // mov edi, 0x800
    0xe8, 0x00, 0x00, 0x00, 0x00, // call _csr_check
    0x85, 0xdb, // test ebx, ebx
    0x0f, 0x84, 0x00, 0x00, 0x00, 0x00, // je
    0x85, 0xc0, // test eax, eax
    0x0f, 0x84, 0x00, 0x00, 0x00, 0x00, // je
    0xc7, 0x85, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, // mov dword [rbp-_V1], 0x0
    0x4d, 0x85, 0xf6, // test r14, r14
    0x74, 0x00 // je
};

const uint8_t SnapshotMask[] = {
    0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xff,
    0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xff,
    0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xff, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff,
    0xff, 0x00
};

const uint8_t SnapshotReplace[] = {
    0xbf, 0x10, 0x00, 0x00, 0x00, // mov edi, 0x10
    0xe8, 0x00, 0x00, 0x00, 0x00, // call _csr_check
    0x89, 0xc3, // mov ebx, eax
    0xbf, 0x00, 0x08, 0x00, 0x00, // mov edi, 0x800
    0xe8, 0x00, 0x00, 0x00, 0x00, // call _csr_check
    0x85, 0xdb, // test ebx, ebx
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, // nop
    0x85, 0xc0, // test eax, eax
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, // nop
    0xc7, 0x85, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, // mov dword [rbp-_V1], 0x0
    0x4d, 0x85, 0xf6, // test r14, r14
    0xeb, 0x00 // jmp
};

const uint8_t SnapshotReplaceMask[] = {
    0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff,
    0xff, 0x00
};



#endif /* kern_realroot_hpp */
